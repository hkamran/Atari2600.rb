
require "ruby2d"
require_relative "./tia"

include ScreenRegions

class Screen


  # http://www.qotile.net/minidig/docs/tia_color.html
  @colors = [
      0x000000, 0x1A1A1A, 0x393939, 0x5B5B5B, 0x7E7E7E, 0xA2A2A2, 0xC7C7C7, 0xEDEDED, 0x190200,
      0x3A1F00, 0x5D4100, 0x826400, 0xA78800, 0xCCAD00, 0xF2D219, 0xFEFA40, 0x370000, 0x5E0800,
      0x832700, 0xA94900, 0xCF6C00, 0xF58F17, 0xFEB438, 0xFEDF6F, 0x470000, 0x730000, 0x981300,
      0xBE3216, 0xE45335, 0xFE7657, 0xFE9C81, 0xFEC6BB, 0x440008, 0x6F001F, 0x960640, 0xBB2462,
      0xE14585, 0xFE67AA, 0xFE8CD6, 0xFEB7F6, 0x2D004A, 0x570067, 0x7D058C, 0xA122B1, 0xC743D7,
      0xED65FE, 0xFE8AF6, 0xFEB5F7, 0x0D0082, 0x3300A2, 0x550FC9, 0x782DF0, 0x9C4EFE, 0xC372FE,
      0xEB98FE, 0xFEC0F9, 0x000091, 0x0A05BD, 0x2822E4, 0x4842FE, 0x6B64FE, 0x908AFE, 0xB7B0FE,
      0xDFD8FE, 0x000072, 0x001CAB, 0x033CD6, 0x205EFD, 0x4081FE, 0x64A6FE, 0x89CEFE, 0xB0F6FE,
      0x00103A, 0x00316E, 0x0055A2, 0x0579C8, 0x239DEE, 0x44C2FE, 0x68E9FE, 0x8FFEFE, 0x001F02,
      0x004326, 0x006957, 0x008D7A, 0x1BB19E, 0x3BD7C3, 0x5DFEE9, 0x86FEFE, 0x002403, 0x004A05,
      0x00700C, 0x09952B, 0x28BA4C, 0x49E06E, 0x6CFE92, 0x97FEB5, 0x002102, 0x004604, 0x086B00,
      0x289000, 0x49B509, 0x6BDB28, 0x8FFE49, 0xBBFE69, 0x001501, 0x103600, 0x305900, 0x537E00,
      0x76A300, 0x9AC800, 0xBFEE1E, 0xE8FE3E, 0x1A0200, 0x3B1F00, 0x5E4100, 0x836400, 0xA88800,
      0xCEAD00, 0xF4D218, 0xFEFA40, 0x380000, 0x5F0800, 0x842700, 0xAA4900, 0xD06B00, 0xF68F18,
      0xFEB439, 0xFEDF70
  ]

  def initialize(&procedure)
    @zoom = 2
    @buffer = []
    @window = Window.new
    @window.set({
                    :title => "Hooboy",
                    :resizable => true,
                    :width => WIDTH * @zoom,
                    :height => HEIGHT * @zoom
                })
    @window.update do
      procedure.call
    end
  end

  def set_pixel(x, y, colorIndex)
    if @buffer[y].nil?
      @buffer[y] = []
    end
    @buffer[y][x] = colorIndex
  end

  def render
  end

  def show
    for y in (0..HEIGHT)
      for x in (0..WIDTH)
      end
    end
    @window.show
  end

end